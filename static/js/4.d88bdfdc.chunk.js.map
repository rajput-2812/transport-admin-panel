{"version":3,"sources":["app/utils/hooks/index.js","app/services/rest/index.js","app/services/driver-applicant/index.js","app/views/pages/Drivers/DriverApplicantList/index.js","app/views/pages/Drivers/DriversComponent.jsx","app/views/pages/Drivers/index.js"],"names":["useMountEffect","func","useEffect","client","axios","create","withCredentials","request","options","showErrorToasts","then","response","error","_get","isEmpty","data","Promise","resolve","console","log","code","errorCode","UNAUTHORIZED_ERROR_CODE","message","info","store","dispatch","appOperations","logout","i18n","t","concat","reject","catch","err","warn","RestService","get","url","arguments","length","undefined","method","post","put","fetchDriverApplicants","api","APPLICANTS","JOB_STATUS","SELF_EMPLOYED","EMPLOYED","UNEMPLOYED","columns","title","dataIndex","key","render","_len","_ref","Array","_key","record","firstName","middleName","lastName","_len2","_ref2","_key2","text","isDLExpired","React","createElement","className","_len3","_ref3","_key3","_len4","_ref4","_key4","clsx","_len5","_ref5","_key5","MoreOutlined","onClick","e","stopPropagation","DriverApplicantList","props","setData","useState","pagination","setPagination","pageNo","size","isLoading","setIsLoading","hasError","setHasError","total","setTotal","params","res","totalCount","fetchRecords","Fragment","Skeleton","height","style","marginBottom","count","float","margin","width","Table","rowKey","userId","dataSource","onChange","current","pageSize","DriversComponents","Drivers","DriversComponent"],"mappings":"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","file":"static/js/4.d88bdfdc.chunk.js","sourcesContent":["import { useEffect } from \"react\";\n\nexport const useMountEffect = (func) => useEffect(func, []);\n","import axios from \"axios\";\nimport isEmpty from \"lodash/isEmpty\";\nimport _get from \"lodash/get\";\nimport i18n from \"i18next\";\nimport { message } from \"antd\";\nimport { store } from \"app/store\";\nimport { appOperations } from \"app/store/state/app\";\nimport { UNAUTHORIZED_ERROR_CODE } from \"app/constants/keys\";\n\nconst client = axios.create({\n  withCredentials: false,\n});\n\nconst request = function (options, showErrorToasts) {\n  const onSuccess = function (response) {\n    let error = _get(response, `data.error`, {});\n    if (!isEmpty(error)) {\n      console.log(\"Rest: Request Failed!\", response);\n      error.code = error.errorCode || \"error\";\n      if (error.code === UNAUTHORIZED_ERROR_CODE) {\n        message.info(\"Session expired!\");\n        store.dispatch(appOperations.logout());\n      }\n      showErrorToasts && message.error(i18n.t(`error:${error.code}`));\n      return Promise.reject(error);\n    } else {\n      const data = _get(response, `data`, {});\n      return Promise.resolve(data);\n    }\n  };\n\n  const onError = function (err) {\n    let error = _get(err, `response.data`, {});\n    console.warn(\"Rest: API request has failed\", error, err.response);\n    if (!isEmpty(error)) {\n      error.code = error.errorCode || \"error\";\n    } else {\n      error.code = \"error\";\n    }\n    if (error.code === UNAUTHORIZED_ERROR_CODE) {\n      message.info(\"Session expired!\");\n\n      store.dispatch(appOperations.logout());\n    }\n    showErrorToasts && message.error(i18n.t(`error:${error.code}`));\n    return Promise.reject(error);\n  };\n\n  return client(options).then(onSuccess).catch(onError);\n};\n\nconst get = (url, showErrorToasts = true) => {\n  return request(\n    {\n      url,\n      method: \"GET\",\n    },\n    showErrorToasts\n  );\n};\n\nconst post = (url, data, showErrorToasts = true) => {\n  return request(\n    {\n      url,\n      method: \"POST\",\n      data,\n    },\n    showErrorToasts\n  );\n};\n\nconst put = (url, data, showErrorToasts = true) => {\n  return request(\n    {\n      url,\n      method: \"PUT\",\n      data,\n    },\n    showErrorToasts\n  );\n};\n\nconst RestService = {\n  get,\n  post,\n  put,\n};\n\nexport default RestService;\n","import api from \"app/routes/api\";\nimport RestService from \"../rest\";\n\nexport const fetchDriverApplicants = (options = {}) => {\n  /**GraphQL Service Call */\n  // return UserGraphQLService(\n  //   VALIDATE_OTP_MUTATION,\n  //   {\n  //     country_code: countryCode || '1',\n  //     phone_number: `${getPhoneNumberFromMask(maskedMobileNo)}`,\n  //     verification_code: otp,\n  //   },\n  //   showErrorToasts,\n  // );\n\n  /**Rest Service Call */\n  return RestService.post(api.APPLICANTS, options, true);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Table } from \"antd\";\nimport { useMountEffect } from \"app/utils/hooks\";\nimport { fetchDriverApplicants } from \"app/services/driver-applicant\";\nimport MoreOutlined from \"@ant-design/icons/MoreOutlined\";\nimport { isEmpty } from \"lodash\";\nimport Skeleton from \"react-loading-skeleton\";\nimport clsx from \"clsx\";\nimport \"../style.scss\";\nconst JOB_STATUS = {\n  SELF_EMPLOYED: \"Self-Employed\",\n  EMPLOYED: \"Employed\",\n  UNEMPLOYED: \"Unemployed\",\n};\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"firstName\",\n    key: \"userId\",\n    render: (...[, record]) =>\n      `${record.firstName} ${record.middleName} ${record.lastName}`,\n  },\n  {\n    title: \"City\",\n    dataIndex: \"city\",\n    key: \"city\",\n  },\n  {\n    title: \"State\",\n    dataIndex: \"state\",\n    key: \"state\",\n  },\n  {\n    title: \"DL Class\",\n    dataIndex: \"dlClass\",\n    key: \"dlClass\",\n    render: (...[text, record]) => {\n      return record.isDLExpired ? (\n        <div className=\"text-danger\">\n          <span className=\"danger-dot\">&#8226;</span>\n          <span>{text}</span>\n        </div>\n      ) : (\n        <div>{text}</div>\n      );\n    },\n  },\n  {\n    title: \"DL Endorsements\",\n    dataIndex: \"dlEndorsements\",\n    key: \"dlEndorsements\",\n    render: (...[text, record]) => {\n      return record.isDLExpired ? (\n        <div className=\"text-danger\">\n          <span className=\"danger-dot\">&#8226;</span>\n          <span>{text}</span>\n        </div>\n      ) : (\n        <div>{text}</div>\n      );\n    },\n  },\n  {\n    title: \"Job Status\",\n    dataIndex: \"presentEmpStatus\",\n    key: \"presentEmpStatus\",\n    render: (...[text, record]) => {\n      return (\n        <div className={clsx(text === \"UNEMPLOYED\" ? \"text-warning\" : \"\")}>\n          <span>{JOB_STATUS[text] || text}</span>\n        </div>\n      );\n    },\n  },\n  {\n    title: \"Action\",\n    dataIndex: \"\",\n    key: \"\",\n    render: (...[text, record]) => {\n      return (\n        <div className=\"actions\">\n          <MoreOutlined onClick={(e) => e.stopPropagation()} />\n        </div>\n      );\n    },\n  },\n];\n\nfunction DriverApplicantList(props) {\n  const [data, setData] = useState([]);\n  const [pagination, setPagination] = useState({\n    pageNo: 1,\n    size: 10,\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [total, setTotal] = useState(0);\n\n  const handleChange = (pagination) => {\n    console.log(\"Pagina\", pagination);\n    const { current, pageSize } = pagination;\n    setPagination({\n      pageNo: current,\n      size: pageSize,\n    });\n  };\n\n  const fetchRecords = (params = {}) => {\n    setIsLoading(true);\n    fetchDriverApplicants(params)\n      .then((res) => {\n        console.log(\"Data\", res);\n        setIsLoading(false);\n        setData(res.data || []);\n        setHasError(false);\n        if (total !== res.totalCount) setTotal(res.totalCount || 0);\n      })\n      .catch((err) => {\n        console.log(\"Err\", err);\n        setIsLoading(false);\n        setHasError(true);\n      });\n  };\n\n  useMountEffect(() => {\n    // fetchRecords(pagination);\n  });\n\n  useEffect(() => {\n    fetchRecords(pagination);\n  }, [pagination.pageNo, pagination.size]);\n\n  return (\n    <>\n      <h3>{`Prospective Drivers ${total ? `(${total})` : \"\"}`}</h3>\n      {isEmpty(data) && isLoading ? (\n        <>\n          <Skeleton height={55} style={{ marginBottom: \"3px\" }} />\n          <Skeleton count={pagination.size} height={45} />\n\n          <Skeleton\n            style={{ float: \"right\", margin: \"10px\" }}\n            width={350}\n            height={35}\n          />\n        </>\n      ) : (\n        <Table\n          columns={columns}\n          rowKey={(record) => record.userId}\n          dataSource={data}\n          pagination={{ ...pagination, total }}\n          onChange={handleChange}\n        />\n      )}\n    </>\n  );\n}\n\nDriverApplicantList.propTypes = {};\n\nexport default DriverApplicantList;\n","import React from \"react\";\nimport DriverApplicantList from \"./DriverApplicantList\";\n\nfunction DriversComponents(props) {\n  return (\n    <div>\n      <DriverApplicantList />\n    </div>\n  );\n}\n\nDriversComponents.propTypes = {};\n\nexport default DriversComponents;\n","import React from \"react\";\nimport DriversComponent from \"./DriversComponent\";\nimport { useMountEffect } from \"app/utils/hooks\";\n\nfunction Drivers(props) {\n  useMountEffect(() => {\n    console.log(\"Drivers Mounted\");\n  });\n\n  return <DriversComponent />;\n}\n\nDrivers.propTypes = {};\n\nexport default Drivers;\n"],"sourceRoot":""}